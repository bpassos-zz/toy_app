== README

== README

This is a Ruby on rails tutoria from railstutorial.org

In this tutorial talks about a high-level overview of a Rails application.

This toy app has several strangths and a host of weaknesses.

Strengths

* High level overview of Rails

* Introduction to MVC

* First taste of the REST architecture

* Beginning data modeling

Weaknesses

* No custom layout or styling

* No static pages (such as "home" or "about")

* No user passwords

* No user images

* no logging in

* No security

* No automatic user/micropost association

* No notion of "following" or "followed"

* No micropost feed

* No meaningful tests

* No real understanding

What was learned

* Scaffolding automatically creates code to model data and interact with it through the web

* Scaffolding is good for getting started quickly but is bad for understanding.

* Rails uses the Model-View-Controller (MVC) pattern for structuring web applications.

* Interpreted by Rails, the REST architacture includes a standard set of URLs and controller actions for interacting with data models.

* Rails supports data validations to place constraints on the values of data model attributes.

* Rails comes with built-in functions for defining associations between different data models.

* We can interact with Rails applications at the command line using the Rails console.

